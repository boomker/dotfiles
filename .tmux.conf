unbind C-b
set -g prefix C-g
set -g status-interval 2
set -g focus-events on
set -g history-limit 40000
set -g status-position bottom
# set -g status-style bg=colour235
# set -g status-style fg=yellow
set -g status-justify centre
# set -g status-justify left
set -g status-left-length 100
set -g status-right-length 100
# set -g pane-border-style fg=colour237
# set -g pane-active-border-style fg=colour240
# set -g window-status-activity-style bright
# setw -g window-status-style dim
# set -g message-command-style fg=colour168
# set -g message-command-style bg=default
set -g message-style bright

set -g visual-activity on
#set -g visual-silence on
#set -g monitor-bell on
#set -g silence-action other
#set -g activity-action other
#set -g monitor-silence 1
setw -g monitor-activity on

setw -g -q utf8 on
setw -g allow-rename off
# setw -g automatic-rename on
set -g renumber-windows on
set -g base-index 1            # start windows numbering at 1
set -g pane-base-index 1       # make pane numbering consistent with windows
set -g set-titles on           # set terminal title
set -g set-titles-string '#h ❐ #S ● #I #W'
set -sg escape-time 0
set -g repeat-time 0            # Allow the arrow key to be used immediately after changing windows
# set -s escape-time 1
set -g display-panes-time 800   # slightly longer pane indicators display time
set -g display-time 1000        # slightly longer status messages display time

# set-window-option -g window-status-format ' #[dim]#I:#[default]#W#[fg=cyan,dim]#F#[bg=colour215]'
# set-window-option -g window-status-current-format ' #[fg=white,bg=magenta,bold]#I:#[fg=black,bg=cyan,bold]#W#[fg=colour37,bg=colour235]'

# set -g status-left "#(~/gitrepo/tmux-powerline/powerline.sh left)"
# set -g status-right "#(~/gitrepo/tmux-powerline/powerline.sh right)"

# set -g status-left "#[fg=colour234,bg=colour148] #S:#I.#P#[fg=colour148,bg=colour24]#(tmux-statusline_main left)#[fg=colour24,bg=default]"
# set -g status-left "#[fg=colour234,bg=colour148] #S:#I.#P #[fg=black,bg=colour24]❂ #[fg=colour148,bg=colour24]H:[#(tmux-statusline_main left)]"

# set -g status-right "#[fg=yellow]#(tmux-statusline_main)#[fg=blue]#[fg=white,bg=blue]%b-%d#[fg=colour148]#[fg=black,bg=colour148]%R"
# set -g status-right "#[fg=black,bg=yellow]❂ #(tmux-statusline_main) #[fg=black,bg=colour148]☉ T:[%b-%d %R]"


# if-shell '[ $(uname -s) = Darwin ]' 'set -g default-terminal "tmux-256color";
# if-shell '[ $(uname -s) = Darwin ]' 'set -g default-terminal "xterm-256color-italic";
# set-option -sa terminal-overrides ',xterm-256color-italic:RGB'

if-shell '[ $(uname -s) = Darwin ]' 'set -g default-terminal "xterm-256color"; \
set -g default-command "reattach-to-user-namespace -l ${SHELL}"'
# set-option -sa terminal-overrides ',xterm-256color:RGB'

# Undercurl
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
# set -as terminal-overrides ',xterm*:sitm=\E[3m' # 在tmux里ssh远程其他机器，tmux-256color 不兼容
# set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'




setw -g mode-keys vi
set -g @shell_mode 'vi'

bind-key c copy-mode
bind-key b list-buffers
bind-key g choose-buffer
bind-key e delete-buffer
bind-key p paste-buffer
bind-key P pipe-pane -o "cat >>~/Desktop/#S_#W.log" \; display "Toggled logging to ~/Desktop/#S_#W.log"
bind-key a set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"
bind-key r rotate-window
bind-key o next-layout
bind-key f previous-window
bind-key space next-window
bind-key x kill-pane
bind-key u last-window        # move to last active window
bind-key m select-layout main-horizontal
# bind-key m command-prompt "splitw 'man %%'"

bind M set -g mouse on
bind n new-window -c "#{pane_current_path}"
bind '-' split-window -c "#{pane_current_path}"
bind t split-window -h -c "#{pane_current_path}"

set -g @extrakto_key "v"
set -g @extrakto_copy_key "ctrl-y"      # use tab to copy to clipboard
set -g @extrakto_insert_key "enter"

# bind-key 0 run "tmux split-window -l 22 'zsh -ci fjpane'"
bind-key -T copy-mode-vi v send-keys -X clear-selection  # space: begin-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi L send-keys -X end-of-line
bind-key -T copy-mode-vi H send-keys -X start-of-line
# bind-key -T copy-mode-vi > send-keys -X end-of-line
bind-key -T copy-mode-vi y \
    send-keys -X copy-pipe "reattach-to-user-namespace pbcopy" \;\
    send-keys -X clear-selection

# 把从 tmux copy mode 里复制的内容放到系统剪贴板
# copy to Mac OSX clipboard
# if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
set -g set-clipboard on

bind -r > swap-pane -D
bind -r < swap-pane -U    # swap current pane with the previous one
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# 方便放大将要聚焦的那个窗格
bind -r C-h select-pane -L \; resize-pane -Z
bind -r C-j select-pane -D \; resize-pane -Z
bind -r C-k select-pane -U \; resize-pane -Z
bind -r C-l select-pane -R \; resize-pane -Z

# tmux plugin manager tpm and plugins lists: {{{
    set -g @plugin 'tmux-plugins/tpm'
    set -g @plugin 'tmux-plugins/tmux-resurrect.git'
    set -g @plugin 'tmux-plugins/tmux-continuum.git'
    set -g @plugin 'laktak/extrakto'
    set -g @plugin 'dracula/tmux'
    # set -g @plugin 'wfxr/tmux-power'
    run -b '~/.tmux/plugins/tpm/tpm'
# }}}

# available plugins: battery, cpu-usage, git, gpu-usage, ram-usage, network, network-bandwidth, weather, time
# set -g @tmux_power_theme 'violet'

set -g @dracula-plugins "battery network time"
set -g @dracula-show-powerline true

set -g @dracula-ping-server "qq.com"
set -g @dracula-ping-rate 5

# for left
set -g @dracula-show-left-sep 

# for right symbol (can set any symbol you like as seperator)
set -g @dracula-show-right-sep 

# it can accept `session`, `smiley`, `window`, or any character.
set -g @dracula-show-left-icon session

set -g @dracula-border-contrast true


# Plugin tmux-open conf:
    # set -g @open 'O'
    # set -g @open-S 'https://www.google.com/search?q='

## Plugin Resurrect conf {{
    # set-option directory to save TMUX environments
    # set-option -g @resurrect-dir '~/.tmux-resurrect'
    # Enable saving and restoring tmux pane contents
    set-option -g @resurrect-capture-pane-contents 'on'
    set -g @resurrect-strategy-vim 'session'
    set -g @resurrect-strategy-nvim 'session'
    # set -g @resurrect-save-shell-history 'on'
## }}

set -g @continuum-restore 'on' # 启用自动恢复
set -g @continuum-save-interval '30'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'
set -g @continuum-boot-options 'iterm,fullscreen'


bind R source-file ~/.tmux.conf \; display-message "Reload config success!"
# tmuxinator fast create session:
# tmuxinator new project_a
# mux start project_a

# reference: http://louiszhai.github.io/2017/09/30/tmux
